name: 'Build iperf3 image'
on:
  # Run every Sunday at midnight
  schedule:
    - cron: '0 0 * * 0'
  # Run on push to main
  push:
    branches:
      - main

jobs:
  prep:
    environment: docker-build
    runs-on: ubuntu-22.04
    container:
      image: ubuntu:noble
    outputs:
      current_date: ${{ steps.get-current-date.outputs.CURRENT_DATE }}
      iperf_version: ${{ steps.get-latest-iperf-version.outputs.IPERF_VERSION }}
    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Get current date
    - name: Get current date
      id: get-current-date
      run: echo CURRENT_DATE=$(date '+%Y%m%d') >> $GITHUB_OUTPUT

    # Get the latest iperf version
    - name: Run get-latest-iperf-version.sh
      id: get-latest-iperf-version
      run: |
        chmod +x get-latest-iperf-version.sh
        echo IPERF_VERSION=$(./get-latest-iperf-version.sh) >> $GITHUB_OUTPUT
      
  build-and-publish-image:
    # Set the environment
    environment: docker-build
    # Match the image of our Dockerfile
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    needs: prep
    steps:

    # # From https://github.com/nektos/act/issues/973#issuecomment-1874812929
    # # Handle dependencies needed for local testing with act
    # - name: "Determine prerequisites"
    #   if: ${{ steps.get-latest-iperf-version.outcome == 'success' }}
    #   id: prereq
    #   run: |
    #     echo "need_node=$(command -v node >/dev/null 2>&1 && echo 0 || echo 1)" >> $GITHUB_OUTPUT
    # - name: Install node
    #   if: ${{ steps.get-latest-iperf-version.outcome == 'success' }} && ${{ steps.prereq.outputs.need_node == '1' }}
    #   run: |
    #     apt install -y curl docker.io
    #     curl -sS https://webi.sh/node | sh
    #     echo ~/.local/opt/node/bin >> $GITHUB_PATH

    # Setup Docker Buildx
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # Log in to ghcr.io
    - name: Log in to ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build and publish the Docker image
    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        push: true
        provenance: mode=max
        sbom: true
        tags: jonrichards/iperf3-ubuntu:latest,jonrichards/iperf3-ubuntu:${{ needs.prep.outputs.iperf_version }}_${{ needs.prep.outputs.current_date }},ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ needs.prep.outputs.iperf_version }}_${{ needs.prep.outputs.current_date }}
        file: ./Dockerfile
